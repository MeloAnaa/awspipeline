version: 0.2

phases:
  install:
    commands:
      - echo "Instalando dependências..."
      - yum install -y jq curl unzip
      - curl -LO https://releases.hashicorp.com/terraform/1.5.7/terraform_1.5.7_linux_amd64.zip
      - unzip terraform_1.5.7_linux_amd64.zip -d /usr/local/bin/
      - echo "Versões: Terraform $(terraform --version), jq $(jq --version)"

  pre_build:
    commands:
      - echo "=== INÍCIO DA VALIDAÇÃO FIREFLY ==="
      - |
        # Debug: Verificar segredos carregados (sem expor valores)
        echo "Segredos carregados:"
        echo "- ARN Firefly: arn:aws:secretsmanager:us-east-1:458745156302:secret:firefly/credentials-labana2025-RksHlQ"
        echo "- ARN AWS Account: arn:aws:secretsmanager:us-east-1:458745156302:secret:aws-account-8MKO9x"

        # Autenticação na API Firefly
        AUTH_RESPONSE=$(curl -s -X POST "https://api.firefly.ai/api/v1.0/login" \
          -H "Content-Type: application/json" \
          -d "{\"accessKey\":\"$FIREFLY_ACCESS_KEY\",\"secretKey\":\"$FIREFLY_SECRET_KEY\"}")
        
        echo "Resposta de autenticação:"
        echo "$AUTH_RESPONSE" | jq .

        ACCESS_TOKEN=$(echo "$AUTH_RESPONSE" | jq -r '.accessToken')
        if [ -z "$ACCESS_TOKEN" ] || [ "$ACCESS_TOKEN" = "null" ]; then
          echo "❌ ERRO: Falha na autenticação com Firefly"
          exit 1
        fi

        # Preparar payload com accountNumber correto
        PAYLOAD=$(jq -n \
          --arg account "$AWS_ACCOUNT_ID" \
          --slurpfile tfplan tfplan.json \
          '{
            assetType: "terraform_plan",
            assetId: "infra-${account}-$(date +%Y%m%d)",
            iacType: "terraform",
            provider: "aws",
            accountNumber: $account,
            plan: $tfplan[0]
          }')

        echo "Payload sendo enviado:"
        echo "$PAYLOAD" | jq .

        # Chamar endpoint /codify
        API_RESPONSE=$(curl -v -X POST "https://api.firefly.ai/api/v1.0/codify" \
          -H "Authorization: Bearer $ACCESS_TOKEN" \
          -H "Content-Type: application/json" \
          -d "$PAYLOAD" 2>&1)

        # Extrair HTTP status code e corpo da resposta
        HTTP_CODE=$(echo "$API_RESPONSE" | grep -oP 'HTTP/\d\.\d \K\d{3}')
        RESPONSE_BODY=$(echo "$API_RESPONSE" | grep -Pzo '(?<=\r\n\r\n).*')

        echo "Firefly Response (HTTP $HTTP_CODE):"
        echo "$RESPONSE_BODY" | jq .

        if [ "$HTTP_CODE" != "200" ]; then
          echo "❌ ERRO: Chamada à API falhou (HTTP $HTTP_CODE)"
          exit 1
        fi

        STATUS=$(echo "$RESPONSE_BODY" | jq -r '.codifiedResult.status')
        if [ "$STATUS" != "approved" ]; then
          echo "❌ ERRO: Infraestrutura rejeitada. Motivo:"
          echo "$RESPONSE_BODY" | jq -r '.codifiedResult.message'
          exit 1
        fi

  build:
    commands:
      - echo "=== APLICANDO INFRAESTRUTURA ==="
      - terraform apply -auto-approve tfplan

env:
  secrets-manager:
    FIREFLY_ACCESS_KEY: "arn:aws:secretsmanager:us-east-1:458745156302:secret:firefly/credentials-labana2025-RksHlQ:access-key::"
    FIREFLY_SECRET_KEY: "arn:aws:secretsmanager:us-east-1:458745156302:secret:firefly/credentials-labana2025-RksHlQ:secret-key::"
    AWS_ACCOUNT_ID: "arn:aws:secretsmanager:us-east-1:458745156302:secret:aws-account-8MKO9x:account-id::"