version: 0.2

phases:
  install:
    commands:
      - echo "Instalando dependências..."
      - yum update -y
      - yum install -y unzip tar gzip
      
      # 2. Instala Terraform
      - TERRAFORM_VERSION="1.5.7"
      - wget https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip
      - unzip terraform_${TERRAFORM_VERSION}_linux_amd64.zip -d /usr/local/bin/

  pre_build:
    commands:
      - echo "=== INÍCIO DA VALIDAÇÃO FIREFLY ==="
      - echo "Verificando segredos..."
      - '[ -z "$AWS_ACCOUNT_ID" ] && { echo "Variável AWS_ACCOUNT_ID não definida"; exit 1; }'
      
      - |
        # Autenticação na API Firefly
        AUTH_PAYLOAD='{"accessKey":"'"$FIREFLY_ACCESS_KEY"'","secretKey":"'"$FIREFLY_SECRET_KEY"'"}'
        AUTH_RESPONSE=$(curl -s -X POST "https://api.firefly.ai/api/v1.0/login" \
          -H "Content-Type: application/json" \
          -d "$AUTH_PAYLOAD")
        
        echo "Resposta de autenticação:"
        echo "$AUTH_RESPONSE" | jq .
        
        ACCESS_TOKEN=$(echo "$AUTH_RESPONSE" | jq -r '.accessToken')
        [ "$ACCESS_TOKEN" = "null" ] && { echo "❌ ERRO: Falha na autenticação"; exit 1; }
      
      - |
        # Preparar e enviar payload
        PAYLOAD='{
          "assetType": "terraform_plan",
          "assetId": "infra-'"$AWS_ACCOUNT_ID"'-'"$(date +%s)"'",
          "iacType": "terraform",
          "provider": "aws",
          "accountNumber": "'"$AWS_ACCOUNT_ID"'",
          "plan": '"$(cat tfplan.json)"'
        }'
        
        echo "Payload sendo enviado:"
        echo "$PAYLOAD" | jq .
        
        RESPONSE=$(curl -s -X POST "https://api.firefly.ai/api/v1.0/codify" \
          -H "Authorization: Bearer $ACCESS_TOKEN" \
          -H "Content-Type: application/json" \
          -d "$PAYLOAD")
        
        echo "Resposta do Firefly:"
        echo "$RESPONSE" | jq .
        
        STATUS=$(echo "$RESPONSE" | jq -r '.codifiedResult.status')
        [ "$STATUS" != "approved" ] && { echo "❌ ERRO: Infraestrutura rejeitada"; exit 1; }

  build:
    commands:
      - echo "=== APLICANDO INFRAESTRUTURA ==="
      - terraform init
      - terraform apply -auto-approve

env:
  secrets-manager:
    FIREFLY_ACCESS_KEY: "firefly/credentials-labana2025:access-key"
    FIREFLY_SECRET_KEY: "firefly/credentials-labana2025:secret-key"
    AWS_ACCOUNT_ID: "aws-account:account-id"